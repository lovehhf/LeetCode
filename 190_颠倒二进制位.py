# -*- coding:utf-8 -*-

__author__ = 'huanghf'

"""
颠倒给定的 32 位无符号整数的二进制位。

 

示例 1：

输入: 00000010100101000001111010011100
输出: 00111001011110000010100101000000
解释: 输入的二进制串 00000010100101000001111010011100 表示无符号整数 43261596，
      因此返回 964176192，其二进制表示形式为 00111001011110000010100101000000。
示例 2：

输入：11111111111111111111111111111101
输出：10111111111111111111111111111111
解释：输入的二进制串 11111111111111111111111111111101 表示无符号整数 4294967293，
      因此返回 3221225471 其二进制表示形式为 10101111110010110010011101101001。

00000010100101000001111010011100
输出
   43261596 (00000010100101000001111010011100)
预期结果
   964176192 (00111001011110000010100101000000)
"""


# @param n, an integer
# @return an integer
def reverseBits(n):
    """
    :param n:  an integer
    :return res: integer
    """
    n_bin = bin(n)[2:].rjust(32,'0')  # 二进制右对齐32位 往左补0
    res_bin = n_bin[::-1]
    # print(n_bin)
    res = int(res_bin, 2)
    return res

print(reverseBits(43261596))